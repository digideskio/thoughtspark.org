<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="http://thoughtspark.org/feed.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ThoughtSpark.org</title>
  <subtitle>The blog of Jeremy Whitlock.</subtitle>
  <id>http://www.thoughtspark.org</id>
  <link href="http://thoughtspark.org/"/>
  <link rel="self" href="http://thoughtspark.org/feed.xml"/>
  <updated>2013-02-25T19:00:00Z</updated>
  <author>
    <name>Jeremy Whitlock</name>
  </author>
  <entry>
    <title>Dropwizard and Jersey ExceptionMappers</title>
    <link rel="alternate" href="http://thoughtspark.org/2013/02/25/dropwizard-and-jersey-exceptionmappers/"/>
    <id>http://thoughtspark.org/2013/02/25/dropwizard-and-jersey-exceptionmappers/</id>
    <published>2013-02-25T19:00:00Z</published>
    <updated>2013-02-25T19:00:00Z</updated>
    <author>
      <name>Jeremy Whitlock</name>
    </author>
    <summary type="html">&lt;p&gt;The past month I&amp;#39;ve been using an &lt;a href="http://en.wikipedia.org/wiki/Open_source_software"&gt;open source&lt;/a&gt; project called
&lt;a href="http://dropwizard.codahale.com/"&gt;Dropwizard&lt;/a&gt;.  Dropwizard is a self-described as being a &amp;ldquo;Java framework for
developing ops-friendly, high-performance, RESTful web services&amp;rdquo;.  Dropwizard is an awesome piece of kit that bundles&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;The past month I&amp;#39;ve been using an &lt;a href="http://en.wikipedia.org/wiki/Open_source_software"&gt;open source&lt;/a&gt; project called
&lt;a href="http://dropwizard.codahale.com/"&gt;Dropwizard&lt;/a&gt;.  Dropwizard is a self-described as being a &amp;ldquo;Java framework for
developing ops-friendly, high-performance, RESTful web services&amp;rdquo;.  Dropwizard is an awesome piece of kit that bundles
best of breed Java tooling like &lt;a href="http://www.eclipse.org/jetty/"&gt;Jetty&lt;/a&gt;,
&lt;a href="http://code.google.com/p/guava-libraries/"&gt;Guava&lt;/a&gt; and &lt;a href="http://jersey.java.net/"&gt;Jersey&lt;/a&gt;.  Speaking of Jersey, this is
what I&amp;#39;d like to talk about today, specifically about how Dropwizard exposes the ability to create your own Jersey
ExceptionMapper and how the built-in Dropwizard ExceptionMappers might cause you some grief, with a workaround.&lt;/p&gt;

&lt;h3&gt;What is an ExceptionMapper?&lt;/h3&gt;

&lt;p&gt;Jersey, or should I say &lt;a href="http://jax-rs-spec.java.net/"&gt;JAX-RS&lt;/a&gt;, exposes a mechanism that will allow you to map a thrown
Exception or Throwable to a REST response, instead of being unhandled and being presented to
the user as some stacktrace or error text.  &lt;em&gt;(This mechanism requires than you implement the generic
ExceptionMapper interface and then register it.)&lt;/em&gt;  This is excellent for REST APIs that like to
return errors back to the client as part of using the API, like returning a &lt;a href="http://www.json.org/"&gt;JSON&lt;/a&gt; representation
of an Exception that can be parsed and handled on the client.&lt;/p&gt;

&lt;h3&gt;Custom ExceptionMappers in Dropwizard&lt;/h3&gt;

&lt;p&gt;My initial impression of Dropwizard in the context of Jersey and needing to register custom ExceptionMappers was very
positive since Dropwizard exposes an API for registering ExceptionMappers.  Here is a very brief example for those of
you looking to register your custom ExceptionMapper within Dropwizard:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;thoughtspark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dropwizard&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.thoughtspark.dropwizard.app.ApplicationConfiguration&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.thoughtspark.dropwizard.app.GenericExceptionMapper&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.yammer.dropwizard.Service&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.yammer.dropwizard.config.Bootstrap&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.yammer.dropwizard.config.Environment&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * Example Dropwizard {@link Service}.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ApplicationService&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Service&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ApplicationConfiguration&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * Entry point for running this services in isolation via Dropwizard.&lt;/span&gt;
&lt;span class="cm"&gt;     *&lt;/span&gt;
&lt;span class="cm"&gt;     * @param args the arguments&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ApplicationService&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * {@inheritDoc}&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bootstrap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ApplicationConfiguration&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;bootstrap&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;bootstrap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;application&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * {@inheritDoc}&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ApplicationConfiguration&lt;/span&gt; &lt;span class="n"&gt;applicationConfiguration&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Environment&lt;/span&gt; &lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Register the custom ExceptionMapper(s)&lt;/span&gt;
        &lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addProvider&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;GenericExceptionMapper&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The GenericExceptionMapper being registered will handle all Throwables thrown and return a JSON payload representing
the error and its message.&lt;/p&gt;

&lt;h3&gt;Dropwizards Secret &amp;ldquo;Gotcha&amp;rdquo;&lt;/h3&gt;

&lt;p&gt;Everything was going great until I started using Dropwizard
&lt;a href="http://dropwizard.codahale.com/manual/core/#validation"&gt;Validation&lt;/a&gt;.  I noticed that whenever my bean validation
failed, instead of seeing a JSON payload of my validation exception, I was always seeing an HTML version of the
exception&amp;hellip;almost as if I never registered my custom ExceptionMapper, or maybe my custom ExceptionMapper just wasn&amp;#39;t
working.  Seeing that all Exceptions extend Throwable, I didn&amp;#39;t see how my ExceptionMapper wasn&amp;#39;t configured properly
so I dropped into the debugger.&lt;/p&gt;

&lt;p&gt;After some looking around, I see that the actual exception being throw was of type InvalidEntityException.  At this
point, I created a new ExceptionMapper specifically for the InvalidEntityException, restarted Dropwizard and it
worked!  Instead of the HTML responses for InvalidEntityExceptions, I saw my JSON representation.  Everything was
working great&amp;hellip;that is until I restarted the server for a different reason and I noticed that the
InvalidEntityExceptions had gone back to HTML.  I knew I hadn&amp;#39;t changed anything related to the ExceptionMapper so I
started debugging.  After being unable to get the debugger to hit any break points in my ExceptionMappers I started
looking into the Dropwizard sources, thank goodness for open source software, and that is when I saw something,
Dropwizard is registering its own ExceptionMapper for the InvalidEntityException.  What was still bugging me was why my
ExceptionMapper worked once and upon server restart it stopped working, without any changes to my code.  Once again I
found myself in the bowels of Dropwizard&amp;#39;s source and that&amp;#39;s when I found my problem.&lt;/p&gt;

&lt;p&gt;Dropwizard is adding its custom ExceptionMappers into Jersey&amp;#39;s singletons Set, a Set that does not guarantee order.
This explains why one time my ExceptionMapper would work and another time, the built-in Dropwizard ExceptionMapper
would work.  Now that we know the problem, below is one way to work around the problem:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;thoughtspark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dropwizard&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.thoughtspark.dropwizard.app.ApplicationConfiguration&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.thoughtspark.dropwizard.app.GenericExceptionMapper&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.fasterxml.jackson.jaxrs.json.JsonParseExceptionMapper&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.sun.jersey.api.core.ResourceConfig&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.yammer.dropwizard.Service&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.yammer.dropwizard.config.Bootstrap&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.yammer.dropwizard.config.Environment&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.yammer.dropwizard.jersey.InvalidEntityExceptionMapper&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.ArrayList&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.List&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Set&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * Example Dropwizard {@link Service}.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ApplicationService&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Service&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ApplicationConfiguration&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * Entry point for running this services in isolation via Dropwizard.&lt;/span&gt;
&lt;span class="cm"&gt;     *&lt;/span&gt;
&lt;span class="cm"&gt;     * @param args the arguments&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ApplicationService&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * {@inheritDoc}&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bootstrap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ApplicationConfiguration&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;bootstrap&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;bootstrap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;application&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * {@inheritDoc}&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ApplicationConfiguration&lt;/span&gt; &lt;span class="n"&gt;applicationConfiguration&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Environment&lt;/span&gt; &lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Remove all of Dropwizard&amp;#39;s custom ExceptionMappers&lt;/span&gt;
        &lt;span class="n"&gt;ResourceConfig&lt;/span&gt; &lt;span class="n"&gt;jrConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getJerseyResourceConfig&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dwSingletons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jrConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSingletons&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;singletonsToRemove&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dwSingletons&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="n"&gt;ExceptionMapper&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;startsWith&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;com.yammer.dropwizard.jersey.&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;singletonsToRemove&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;singletonsToRemove&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;jrConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSingletons&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;remove&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// Register the custom ExceptionMapper(s)&lt;/span&gt;
        &lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addProvider&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;GenericExceptionMapper&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In the code above, I remove all Dropwizard ExceptionMappers so that I have complete control over how my application
renders Jersey Exceptions.  Now no matter how many times I restart the server, my custom ExceptionMapper will be used
and I can always expect JSON to be returned for Exceptions thrown on the server.  Of course, you might need to change
the approach above based on your needs but for this scenario, I just wanted any ExceptionMapper that Dropwizard
provided to be done away with so I could use my custom versions that returned JSON instead of HTML.&lt;/p&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Dropwizard is awesome and anytime I have to write Java-based REST servers, I&amp;#39;ll be using it.  I do question the
built-in ExceptionMappers, especially with their inability to be configured to output something other than the
hardcoded HTML, but with the workaround above, I don&amp;#39;t have to be stuck because of them.  Please do not let this take
away from Dropwizard and if you get tired of having to use the workaround above, I&amp;#39;m sure the team would welcome a
patch&amp;hellip;if you beat me to it.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Tiny Tina Racist?  I Think Not!</title>
    <link rel="alternate" href="http://thoughtspark.org/2013/02/02/tiny-tina-racist-i-think-not/"/>
    <id>http://thoughtspark.org/2013/02/02/tiny-tina-racist-i-think-not/</id>
    <published>2013-02-03T04:42:00Z</published>
    <updated>2013-02-03T04:42:00Z</updated>
    <author>
      <name>Jeremy Whitlock</name>
    </author>
    <summary type="html">&lt;p&gt;I was going through my &lt;a href="http://www.google.com/reader"&gt;Google Reader&lt;/a&gt; stream today when I came across a thread that
bothered me: &lt;a href="http://kotaku.com/5981171/players-accuse-tiny-tina-from-borderlands-2-of-verbal-blackface-gearbox-writer-says-hell-change-her-if-racist"&gt;Borderlands 2&#8217;s Writer Says He&#8217;ll Change Tiny Tina If She Conveys Racism, As Some Players Think&lt;/a&gt;.&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;I was going through my &lt;a href="http://www.google.com/reader"&gt;Google Reader&lt;/a&gt; stream today when I came across a thread that
bothered me: &lt;a href="http://kotaku.com/5981171/players-accuse-tiny-tina-from-borderlands-2-of-verbal-blackface-gearbox-writer-says-hell-change-her-if-racist"&gt;Borderlands 2&#8217;s Writer Says He&#8217;ll Change Tiny Tina If She Conveys Racism, As Some Players Think&lt;/a&gt;.
After reading the thread, I was shocked at the accusation myself.  I remember playing &lt;a href="http://www.borderlands2.com/"&gt;Borderlands 2&lt;/a&gt;
with a good friend of mine a few days after the release and not only enjoying the Tiny Tina character but laughing so
hard I was crying.  I love Tiny Tina and I just cannot see how she or the person behind her
(&lt;a href="https://twitter.com/reverendanthony"&gt;Anthony Burch&lt;/a&gt;), could be considered racist.  I would had left it at a simple
reply to Anthony on Twitter supporting him and &lt;a href="http://www.gearboxsoftware.com/"&gt;Gearbox Software&lt;/a&gt; but feeling that
there is so much more to this than 140 characters can say, I figured I&amp;#39;d weigh in here.&lt;/p&gt;

&lt;h3&gt;What is Racism?&lt;/h3&gt;

&lt;p&gt;Racism, as defined by &lt;a href="http://www.merriam-webster.com/dictionary/racism"&gt;Merriam-Webster&lt;/a&gt;, is as follows:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Any action, practice, or belief that reflects the racial worldview&#8212;the ideology that humans are divided into separate
and exclusive biological entities called &lt;em&gt;races&lt;/em&gt;, that there is a causal link between inherited physical traits and
traits of personality, intellect, morality, and other cultural behavioral features, and that some &lt;em&gt;races&lt;/em&gt; are innately
superior to others.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That being said, where in the description above  does it say that someone of one race using the &lt;em&gt;lingo&lt;/em&gt; of another
race is racism, or that a race could even impose ownership of &lt;em&gt;lingo&lt;/em&gt;?  The idea of saying that Tiny Tina&amp;#39;s character
is racist because she uses &lt;em&gt;&amp;ldquo;black lingo&amp;rdquo;&lt;/em&gt; is a joke, although not a laughing matter because it&amp;#39;s ridiculous
accusations like this that fuel the controversal matters of racism.  Could you imagine calling
&lt;a href="http://www.eminem.com/"&gt;Eminem&lt;/a&gt;, one of the most talented rappers ever to grace a microphone, a racist because he&amp;#39;s
white and uses &lt;em&gt;&amp;ldquo;black lingo&amp;rdquo;&lt;/em&gt; in his raps?&lt;/p&gt;

&lt;h3&gt;My Opinion&lt;/h3&gt;

&lt;p&gt;In my personal opinion, I think the idea of suggesting that &lt;em&gt;lingo&lt;/em&gt; could be owned by a race could be considered racist.
I mean, suggesting that people of a certain race are the only ones to use certain words is a race-based stereotype, much
like what is described above.  Having grown up in Georgia myself, I knew quite a few white girls/guys that used
&lt;em&gt;black lingo&lt;/em&gt; and black girls/guys that used &lt;em&gt;white lingo&lt;/em&gt;.  To us, they were just words.  As long as you stayed away
from the derogatory words/phrases commonly referred to as &lt;em&gt;racial slurs&lt;/em&gt;, you used whatever verbiage best fit who you
were with and the context of the conversation regardless of which race used the verbiage most or coined a particular
word/phrase.&lt;/p&gt;

&lt;p&gt;What did Gearbox say about the matter?  Here is Gearbox President Randy Pitchford&amp;#39;s
&lt;a href="https://twitter.com/duvalmagic/status/297897719148716032"&gt;response on Twitter&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://twitter.com/reverendanthony"&gt;@reverendanthony&lt;/a&gt; tina is not racist because you are not racist. You&amp;#39;re a pillar
of tolerance and inclusion.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;In Conclusion&lt;/h3&gt;

&lt;p&gt;Borderlands 2 is an awesome game and Tiny Tina is one of my favorite game characters of all times.  Like many others, I
find her hilarious and did not even think of the race card while enjoying the parts of the game she was in.  I think
Anthony did an excellent job making Tiny Tina quirky, unique and memorable, all the things you&amp;#39;d want from a gaming
character.  I also applaud his handling of the situation linked to above.  In the end, I wish him the best and I hope
that people can stop trying to make something out of nothing, the world is already destructive enough without outlandish
accusations about very sensitive subjects such as racism.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Underscore.js Book</title>
    <link rel="alternate" href="http://thoughtspark.org/2012/11/28/underscore-js-book/"/>
    <id>http://thoughtspark.org/2012/11/28/underscore-js-book/</id>
    <published>2012-11-28T22:15:00Z</published>
    <updated>2012-11-28T22:15:00Z</updated>
    <author>
      <name>Jeremy Whitlock</name>
    </author>
    <summary type="html">&lt;p&gt;Let&amp;#39;s make it official, in case you didn&amp;#39;t hear on &lt;a href="http://twitter.com/whitlockjc/status/259296818360377346"&gt;Twitter&lt;/a&gt;,
I&amp;#39;ve signed a contract with &lt;a href="http://oreilly.com/"&gt;O&amp;#39;Reilly Media&lt;/a&gt; to write a book about
&lt;a href="http://underscorejs.org"&gt;Underscore.js&lt;/a&gt;.  How did I get into this awesome situation you might ask?  Well, back in&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;Let&amp;#39;s make it official, in case you didn&amp;#39;t hear on &lt;a href="http://twitter.com/whitlockjc/status/259296818360377346"&gt;Twitter&lt;/a&gt;,
I&amp;#39;ve signed a contract with &lt;a href="http://oreilly.com/"&gt;O&amp;#39;Reilly Media&lt;/a&gt; to write a book about
&lt;a href="http://underscorejs.org"&gt;Underscore.js&lt;/a&gt;.  How did I get into this awesome situation you might ask?  Well, back in
October &lt;a href="https://twitter.com/jashkenas"&gt;Jeremy Ashkenas&lt;/a&gt; posted
&lt;a href="https://twitter.com/jashkenas/status/258249389733187584"&gt;on Twitter&lt;/a&gt; saying that if you were interested in writing
a book about Underscore.js, let him know.  I submitted my proposal and it was accepted.  &lt;strong&gt;WOOHOO!!!&lt;/strong&gt;  Needless to
say, I&amp;#39;m very excited about this opportunity and I&amp;#39;ll do my best to make sure this thing happens.&lt;/p&gt;

&lt;h3&gt;Any Suggestions?&lt;/h3&gt;

&lt;p&gt;I&amp;#39;m not looking to have my name on the cover of just any book, I want this book to be the best possible.  That being
said, I&amp;#39;d love to hear anything you think that could help make the book awesome.  To submit your suggestions, leave
your requests/suggestions in the comments below.&lt;/p&gt;

&lt;h3&gt;Progress&lt;/h3&gt;

&lt;p&gt;I&amp;#39;ve already started work on this book based on the proposal sent to O&amp;#39;Reilly.  As I make progress, I&amp;#39;ll keep you guys
up to speed here on ThoughtSpark.org.  Feel free to reach out to &lt;a href="https://twitter.com/whitlockjc"&gt;me on Twitter&lt;/a&gt; or
in the comments with anything pertinent to this effort.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The New ThoughtSpark.org</title>
    <link rel="alternate" href="http://thoughtspark.org/2012/11/14/the-new-thoughtspark-org/"/>
    <id>http://thoughtspark.org/2012/11/14/the-new-thoughtspark-org/</id>
    <published>2012-11-15T06:00:00Z</published>
    <updated>2012-11-15T06:00:00Z</updated>
    <author>
      <name>Jeremy Whitlock</name>
    </author>
    <summary type="html">&lt;p&gt;I&amp;#39;ve decided it&amp;#39;s time to rethink how I maintain and deploy &lt;a href="http://www.thoughtspark.org"&gt;ThoughtSpark.org&lt;/a&gt;.  My
current deployment model is to use &lt;a href="http://drupal.org"&gt;Drupal&lt;/a&gt; to craft/host my site&amp;#39;s content and I currently
pay a small monthly fee to &lt;a href="http://www.godaddy.com"&gt;GoDaddy&lt;/a&gt; for hosting Drupal.  While there isn&amp;#39;t anything&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;I&amp;#39;ve decided it&amp;#39;s time to rethink how I maintain and deploy &lt;a href="http://www.thoughtspark.org"&gt;ThoughtSpark.org&lt;/a&gt;.  My
current deployment model is to use &lt;a href="http://drupal.org"&gt;Drupal&lt;/a&gt; to craft/host my site&amp;#39;s content and I currently
pay a small monthly fee to &lt;a href="http://www.godaddy.com"&gt;GoDaddy&lt;/a&gt; for hosting Drupal.  While there isn&amp;#39;t anything
really &lt;strong&gt;wrong&lt;/strong&gt; with my current model, I&amp;#39;ve grown tired of it.  Below are a few pain points worth mentioning.&lt;/p&gt;

&lt;h3&gt;Maintenance Overhead&lt;/h3&gt;

&lt;p&gt;I&amp;#39;ve grown tired of maintaining Drupal.  I&amp;#39;m tired of applying a security patch or verision update and having my
whole site turn to crap.  Why?  All of my modules then need to be re-enabled and/or updated.  How is this a
problem?  All non-core functionality on my site &lt;em&gt;(sitemap.xml generation, SPAM filtering, syntax highlighting, &amp;hellip;)&lt;/em&gt;
are all enabled via modules.  If these modules are disabled during the update, and they are, I now have to go through
the process of re-enabling them just so my site doesn&amp;#39;t look like crap and I don&amp;#39;t get SPAMed to Hell and back.&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t get me wrong, Drupal is a phenomenal product.  It&amp;#39;s an excellent
&lt;abbr title="Content Management System"&gt;CMS&lt;/abbr&gt; and Drupal is also a great example of what an
&lt;abbr title="Open Source Software"&gt;OSS&lt;/abbr&gt; project should be.  It&amp;#39;s not Drupal&amp;#39;s fault that I don&amp;#39;t need a
&lt;abbr title="Content Management System"&gt;CMS&lt;/abbr&gt; and I&amp;#39;m sure there is a reason that the update process is more
painful than I&amp;#39;d like.&lt;/p&gt;

&lt;p&gt;Another aspect of the maintenance overhead is the fact that Drupal runs on &lt;a href="http://php.net"&gt;PHP&lt;/a&gt; and needs a
database, &lt;a href="http://www.mysql.com"&gt;MySQL&lt;/a&gt; in my case, so you have to either host your server or pay someone to host it
you.  I chose the second option.  The overhead for this of course is the financial cost, regardless of how large or
small it is.&lt;/p&gt;

&lt;h3&gt;Authoring&lt;/h3&gt;

&lt;p&gt;The options I&amp;#39;ve been exposed to in Drupal for authoring content on my site is to use raw
&lt;abbr title="HyperText Markup Language"&gt;HTML&lt;/abbr&gt; or using one of the
&lt;abbr title="What You See Is What You Get"&gt;WYSIWYG&lt;/abbr&gt; editors.  The problem with raw HTML is it&amp;#39;s cumbersom and
error prone.  Crafting a single post can often end up with a lot of time spent finding HTML typos.  The problem with
WYSIWYG editors is that you often end up fighting them.  Either the output is junk or they don&amp;#39;t handle certain use
cases, like handling code blocks.  Regardless, I loathe creating content in Drupal but again, I don&amp;#39;t feel it&amp;#39;s
Drupal&amp;#39;s fault, I just want something simpler.&lt;/p&gt;

&lt;p&gt;One approach to creating web-based content I&amp;#39;ve become very fond of as of late is
&lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt;.  Markdown is a great language that allows me to focus more
on the content being crafted while still being able to style my content very easily.  I can even drop in raw HTML
wheenver I feel the need to.  If you&amp;#39;ve ever visited any &lt;a href="https://www.github.com"&gt;GitHub&lt;/a&gt; project/user homepage or
a project&amp;#39;s wiki, you&amp;#39;ve seen the result of Markdown.&lt;/p&gt;

&lt;h3&gt;The Solution&lt;/h3&gt;

&lt;p&gt;The new ThoughtSpark.org will no longer be using Drupal and will no longer be deployed on GoDaddy.  Instead, I&amp;#39;m going
to use a static website generator that will take my Markdown files and create my website.  The tool I will be using is
&lt;a href="http://www.middlemanapp.com"&gt;Middleman&lt;/a&gt; and I will be using &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt; as my host.  Not
only will writing/maintaining my website content be easier but now it will also require no cost to host.  Those two
things are good enough reasons for me to switch but there are also the following reasons that are equally compelling:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: With there being no server-side component and no server-side processing, there are much fewer security
issues that I need to concern myself with&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: With there being no server-side component and no server-side processing, the performance of the site
will be faster&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deployment&lt;/strong&gt;: The solutions for hosting static websites are plentiful and you are no longer locked into a
particular host/product for hosting your website.  &lt;em&gt;(There&amp;#39;s a chance you&amp;#39;re already using a
service that will host your static websites for you.  Examples: GitHub&amp;#39;s Pages and 
&lt;a href="http://www.dropboxwiki.com/Hosting_Websites_with_Dropbox"&gt;DropBox&lt;/a&gt; are two excellent examples.)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;In Closing&lt;/h3&gt;

&lt;p&gt;GitHub Pages, Markdown, Middleman and &lt;a href="http://twitter.github.com/bootstrap/"&gt;Twitter Bootstrap&lt;/a&gt; have made it very easy
for me to re-create and maintain ThoughtSpark.org.  I feel like with this new approach for ThoughtSpark.org, I&amp;#39;ll be
able to get posts out quicker and much easier, while saving a few bucks along the way.  Thanks for your patience and I
look forward to sharing with you on my new platform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; There are a few things left to finish before I&amp;#39;d say that the migration is complete, follow
&lt;a href="https://github.com/whitlockjc/thoughtspark.org/issues/1"&gt;here&lt;/a&gt; if you&amp;#39;re interested.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Originally I had planned on migrating all of the old Drupal posts to the new platform.  I&amp;#39;ve decided against
it for a few reasons and will instead only migrate things upon request.  To request such a thing, use the
&lt;a href="https://github.com/whitlockjc/thoughtspark.org/issues"&gt;issue tracker&lt;/a&gt; or hit me up on
&lt;a href="https://twitter.com/whitlockjc"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Using LDAP Groups With Subversion's Authz File</title>
    <link rel="alternate" href="http://thoughtspark.org/2009/01/20/using-ldap-groups-with-subversion-s-authz-file/"/>
    <id>http://thoughtspark.org/2009/01/20/using-ldap-groups-with-subversion-s-authz-file/</id>
    <published>2009-01-20T19:34:00Z</published>
    <updated>2009-01-20T19:34:00Z</updated>
    <author>
      <name>Jeremy Whitlock</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;div class="alert alert-error"&gt;
This script has become so popular that I have moved it to
&lt;a href="http://bitbucket.org" title="BitBucket"&gt;BitBucket&lt;/a&gt; to be able to properly collaborate with the users.
Please submit your patches/bugs/requests at:
&lt;a href="https://bitbucket.org/whitlockjc/jw-tools" title="JW Toolkit"&gt;https://bitbucket.org/whitlockjc/jw-tools&lt;/a&gt;.&lt;/p&gt;
</summary>
    <content type="html">&lt;div class="alert alert-error"&gt;
This script has become so popular that I have moved it to
&lt;a href="http://bitbucket.org" title="BitBucket"&gt;BitBucket&lt;/a&gt; to be able to properly collaborate with the users.
Please submit your patches/bugs/requests at:
&lt;a href="https://bitbucket.org/whitlockjc/jw-tools" title="JW Toolkit"&gt;https://bitbucket.org/whitlockjc/jw-tools&lt;/a&gt;.
&lt;/div&gt;

&lt;h3&gt;Background&lt;/h3&gt;

&lt;p&gt;When building a &lt;a href="http://subversion.apache.org"&gt;Subversion&lt;/a&gt; server, people usually go for the setup that requires the
least amount of administrative overhead.  For many, especially in the enterprise where
&lt;a href="http://en.wikipedia.org/wiki/Active_Directory"&gt;Active Directory&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/OpenLDAP"&gt;OpenLDAP&lt;/a&gt;
rule, this means hooking up &lt;a href="http://httpd.apache.org"&gt;Apache&lt;/a&gt; to a directory server to authenticate users via
&lt;a href="http://en.wikipedia.org/wiki/LDAP"&gt;LDAP&lt;/a&gt;.  The reason for such a setup is that you can use the same credentials that
log you into your computer, and other internal resources usually, to access Subversion.  One less set of credentials
for the user to remember and one less user data store for the administrator to maintain.  Initially, this scenario is
without any real disadvantage.  But once you want to start using your groups defined in your directory with
&lt;a href="http://svnbook.red-bean.com/nightly/en/svn.serverconfig.pathbasedauthz.html"&gt;Subversion&amp;#39;s authorization&lt;/a&gt; (authz)
mechanism, you find one of the shortcomings of such a configuration.&lt;/p&gt;

&lt;h3&gt;The Problem&lt;/h3&gt;

&lt;p&gt;Subversion&amp;#39;s authz architecture requires your group definitions to be defined within the authz file.  Subversion&amp;#39;s
authz architecture is also unaware of third-party data stores for users/groups.  This means that if you do not define
your group within the authz file, Subversion will not know whether a user is a member of said group and will
ultimately tell you that you do not have access to a resource.  That being said, the current problem is that with
this server configuration, either you cannot harness group models defined in your directory server or you have to
manually synchronize your group models from your directory server to Subversion&amp;#39;s authz file.  There are many
downsides to doing things this way:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It&amp;#39;s time consuming&lt;/li&gt;
&lt;li&gt;It&amp;#39;s easy to forget that changes have been made and need to be mirrored&lt;/li&gt;
&lt;li&gt;It&amp;#39;s very easy to make mistakes when doing it yourself&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So while using LDAP for Subversion authentication is a dream, things are not so nice when it comes to reusing your
group models for authz that are defined in your directory server.&lt;/p&gt;

&lt;h3&gt;The Solution&lt;/h3&gt;

&lt;p&gt;Well, it just so happens that I have a solution.  One that is repeatable, loss-less and can be easily setup using the
same information you used to configure Apache to authenticate your Subversion users.  The solution is the
&lt;strong&gt;LDAP Groups to Subversion Authz Groups Bridge&lt;/strong&gt; script. &lt;strong&gt;(Note: This script, its license and a duplicate of this
documentation are attached to the bottom of this article.)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &amp;ldquo;LDAP Groups to Subversion Authz Groups Bridge&amp;rdquo; script is written in Python and, as mentioned before, does its work
in a loss-less fashion.  This means that while this script will take on the trouble of taking your groups models
defined in your directory server and reproducing them in a Subversion authz file, the script will not prohibit you from
creating group definitions within the authz file that are not defined in your directory server.  Tired of all of the
background?  Ready to see the script in action?  Let&amp;#39;s go.&lt;/p&gt;

&lt;h3&gt;The Implementation&lt;/h3&gt;

&lt;p&gt;Implementing the &amp;ldquo;LDAP Groups to Subversion Authz Groups Bridge&amp;rdquo; is actually simple.  If you&amp;#39;ve already configured
Apache to authenticate your Subversion users, which we will not be covering, you can honestly copy/paste pieces of the
Apache configuration into the script.  Before we go through an example though, there are a few prerequisites that you
need to have taken care of before the script will run:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install Python (&lt;a href="http://www.python.org"&gt;http://www.python.org&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Install the python-ldap module (&lt;a href="http://python-ldap.sourceforge.net"&gt;http://python-ldap.sourceforge.net&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we have those things out of the way, let&amp;#39;s look at the help output of the script, just to get our bearings:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Usage&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sync_ldap_groups_to_svn_authz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;py&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;Options&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;            &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;BIND_DN&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BIND_DN&lt;/span&gt;
                        &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;DN&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;BIND_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BIND_PASSWORD&lt;/span&gt;
                        &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;specified&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dn&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;     &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;
                        &lt;span class="n"&gt;server&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="n"&gt;BASE_DN&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BASE_DN&lt;/span&gt;
                        &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;DN&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;perform&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;recursive&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="n"&gt;GROUP_QUERY&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GROUP_QUERY&lt;/span&gt;
                        &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;identify&lt;/span&gt; &lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
                        &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;objectClass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;GROUP_MEMBER_ATTRIBUTE&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;member&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;attribute&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GROUP_MEMBER_ATTRIBUTE&lt;/span&gt;
                        &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;stores&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt;
                        &lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="n"&gt;memberships&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;member&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="n"&gt;USER_QUERY&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;USER_QUERY&lt;/span&gt;
                        &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;identify&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
                        &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;objectClass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;USERID_ATTRIBUTE&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;userid_attribute&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;USERID_ATTRIBUTE&lt;/span&gt;
                        &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;stores&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt;
                        &lt;span class="n"&gt;userid&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;authz&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cn&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="n"&gt;AUTHZ_PATH&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;authz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;AUTHZ_PATH&lt;/span&gt;
                        &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;authz&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;quiet&lt;/span&gt;           &lt;span class="n"&gt;Suppress&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Anything that has a &lt;strong&gt;[Default:&lt;/strong&gt; string in its corresponding documentation is &amp;ldquo;optional&amp;rdquo; and can usually be omitted
when running against most directory servers.  The things that are not optional are things that you can get from your
Apache configuration.  Now that we have our bearings, let&amp;#39;s see an example.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s pretend that I have a directory structure like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Release Managers (CN=Release Managers,OU=Groups,DC=subversion,DC=thoughtspark,DC=org)

&lt;ul&gt;
&lt;li&gt;Release Manager One (CN=Release Manager One,OU=Users,DC=subversion,DC=thoughtspark,DC=org)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Developers (CN=Developers,OU=Groups,DC=subversion,DC=thoughtspark,DC=org)

&lt;ul&gt;
&lt;li&gt;Release Managers (CN=Release Managers,OU=Nested Groups,OU=Groups,DC=subversion,DC=thoughtspark,DC=org)&lt;/li&gt;
&lt;li&gt;Developer One (CN=Developer One,OU=Users,DC=subversion,DC=thoughtspark,DC=org)&lt;/li&gt;
&lt;li&gt;Developer Two (CN=Developer Two,OU=Users,DC=subversion,DC=thoughtspark,DC=org)&lt;/li&gt;
&lt;li&gt;Developer Three (CN=Developer Three,OU=Users,DC=subversion,DC=thoughtspark,DC=org)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Release Managers (CN=Release Managers,OU=Nested Groups,OU=Groups,DC=subversion,DC=thoughtspark,DC=org)

&lt;ul&gt;
&lt;li&gt;Release Manager Two (CN=Release Manager Two,OU=Users,DC=subversion,DC=thoughtspark,DC=org)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Administrators (CN=Administrators,CN=Roles,DC=subversion,DC=thoughtspark,DC=org)

&lt;ul&gt;
&lt;li&gt;Jeremy Whitlock (CN=Jeremy Whitlock,OU=Users,DC=subversion,DC=thoughtspark,DC=org)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(Yes&amp;hellip;I have two groups with the same name but in different locations. This will help showcase how the &lt;strong&gt;LDAP Groups
to Subversion Authz Groups Bridge&lt;/strong&gt; handles this situation.)  I now want to run the script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;sync_ldap_groups_to_svn_authz&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;CN&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Jeremy&lt;/span&gt; &lt;span class="n"&gt;Whitlock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;OU&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subversion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thoughtspark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&amp;quot; &lt;span class="o"&gt;\&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;ldap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;389&amp;quot; &lt;span class="o"&gt;\&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subversion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thoughtspark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&amp;quot; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;svn_auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You&amp;#39;ll notice I didn&amp;#39;t specify a password.  In this event, the script will prompt you, securely, for a password.  After
the script runs, as long as you didn&amp;#39;t run with the &amp;ldquo;-q&amp;rdquo; flag, you should see output like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Successfully&lt;/span&gt; &lt;span class="n"&gt;bound&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ldap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;389
4 &lt;span class="n"&gt;groups&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Okay, things ran smoothly.  (If you notice any &lt;strong&gt;[WARNING]&lt;/strong&gt; output, just look at the message along side the warning to
see why.)  So what does the file look like?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[groups]&lt;/span&gt;

&lt;span class="c"&gt;### Start generated content: LDAP Groups to Subversion Authz Groups Bridge (2009/01/19 23:17:07) ###&lt;/span&gt;
&lt;span class="na"&gt;ReleaseManagers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Release Manager One&lt;/span&gt;
&lt;span class="na"&gt;Developers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;@ReleaseManagers1, Developer Three, Developer Two, Developer One&lt;/span&gt;
&lt;span class="na"&gt;ReleaseManagers1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Release Manager Two&lt;/span&gt;
&lt;span class="na"&gt;Administrators&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Jeremy Whitlock&lt;/span&gt;

&lt;span class="c"&gt;################################################################################&lt;/span&gt;
&lt;span class="c"&gt;###########   LDAP Groups to Subversion Authz Groups Bridge (Legend)  ##########&lt;/span&gt;
&lt;span class="c"&gt;################################################################################&lt;/span&gt;
&lt;span class="c"&gt;### ReleaseManagers = CN=Release Managers,OU=Groups,DC=subversion,DC=thoughtspark,DC=org&lt;/span&gt;
&lt;span class="c"&gt;### Developers = CN=Developers,OU=Groups,DC=subversion,DC=thoughtspark,DC=org&lt;/span&gt;
&lt;span class="c"&gt;### ReleaseManagers1 = CN=Release Managers,OU=Nested Groups,OU=Groups,DC=subversion,DC=thoughtspark,DC=org&lt;/span&gt;
&lt;span class="c"&gt;### Administrators = CN=Administrators,CN=Roles,DC=subversion,DC=thoughtspark,DC=org&lt;/span&gt;
&lt;span class="c"&gt;###############################################################################&lt;/span&gt;

&lt;span class="c"&gt;### End generated content: LDAP Groups to Subversion Authz Groups Bridge ###&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here is a list of features, or things to realize, based on the output of this script:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &amp;ldquo;[groups]&amp;rdquo; section is created but only if necessary&lt;/li&gt;
&lt;li&gt;All generated content is within known &amp;ldquo;markers&amp;rdquo; for loss-less regeneration&lt;/li&gt;
&lt;li&gt;The header tells you when the file was last synchronized&lt;/li&gt;
&lt;li&gt;Nested groups, of any level, are supported&lt;/li&gt;
&lt;li&gt;Groups with the same name, but different locations, are supported&lt;/li&gt;
&lt;li&gt;An easy-to-read legend is created for reference reasons&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we&amp;#39;ve seen a very simple example, let&amp;#39;s see one more example of how we might take an Apache configuration and
turn that into a call to the &amp;ldquo;LDAP Groups to Subversion Authz Groups Bridge&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Below we have a snippet of the important parts of an Apache configuration using LDAP for Subversion authentication:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;...&lt;/span&gt;
# &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;distinguished&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;
&lt;span class="n"&gt;AuthLDAPBindDN&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;CN&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Jeremy&lt;/span&gt; &lt;span class="n"&gt;Whitlock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;OU&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subversion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thoughtspark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&amp;quot;

# &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;above&lt;/span&gt;
&lt;span class="n"&gt;AuthLDAPBindPassword&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;myP455w0rd&lt;/span&gt;&amp;quot;

# &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;LDAP&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
&lt;span class="n"&gt;AuthLDAPURL&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;ldap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;389&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subversion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thoughtspark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;?&lt;span class="n"&gt;sAMAccountName&lt;/span&gt;?&lt;span class="n"&gt;sub&lt;/span&gt;?&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;objectClass&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&amp;quot;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;With the above information, Apache could connect to my theoretical Active Directory server and look for user objects.
The way Apache identifies user objects is by the &amp;ldquo;objectClass&amp;rdquo; attribute being set to &amp;ldquo;user&amp;rdquo;.  Once a user is found,
the &lt;strong&gt;sAMAccountName&lt;/strong&gt; attribute is queried to see if it matches the user logging in.  Once the user is found, it is
authenticated.  That being said, let&amp;#39;s parse this information and turn it into a successful call to the &lt;strong&gt;LDAP Groups
to Subversion Authz Groups Bridge&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;sync_ldap_groups_to_svn_authz&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;CN&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Jeremy&lt;/span&gt; &lt;span class="n"&gt;Whitlock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;OU&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subversion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thoughtspark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&amp;quot; &lt;span class="o"&gt;\&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;myP455w0rd&lt;/span&gt;&amp;quot; &lt;span class="o"&gt;\&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;ldap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;389&amp;quot; &lt;span class="o"&gt;\&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subversion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thoughtspark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DC&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&amp;quot; &lt;span class="o"&gt;\&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;sAMAccountName&lt;/span&gt;&amp;quot; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;svn_auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The new things you see in this call that differ from the first call is that we are now looking for the
&lt;strong&gt;sAMAccountName&lt;/strong&gt; attribute for the username instead of the &amp;ldquo;cn&amp;rdquo; attribute.  You also see that we can pass the
password as a command line argument.&lt;/p&gt;

&lt;h3&gt;Summary&lt;/h3&gt;

&lt;p&gt;So now that we&amp;#39;ve seen how the script is ran, what is necessary to get it running and even a complete example, it&amp;#39;s
now up to you to get this thing into your Subversion infrastructure.  Immediate ideas are to automate this with your
operating system&amp;#39;s task scheduler and/or create a web interface to kick this script off on an as-needed basis.
Regardless of how you use it, the &amp;ldquo;LDAP Groups to Subversion Authz Groups Bridge&amp;rdquo; should make the error-prone, tedious
and easy-to-forget process of manually synchronizing your LDAP group models to Subversion&amp;#39;s authz file much, much
easier.  It might even get so easy you forget that Subversion doesn&amp;#39;t natively support LDAP groups.&lt;/p&gt;

&lt;h3&gt;Change History&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;2009-01-22 - There was a bug when you didn&amp;#39;t specify the -z flag and when the query returned no groups.  Version 1.0.1 has been produced as a result.&lt;/li&gt;
&lt;li&gt;2009-04-15 - There was a bug introduced when reformatting the code that broke the nested groups support.  Version 1.0.2 has been produced as a result.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
